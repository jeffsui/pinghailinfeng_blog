<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[凭海临风的测试江湖]]></title>
  
  <link href="/pinghailinfeng_blog/atom.xml" rel="self"/>
  <link href="http://jeffsui.github.io/"/>
  <updated>2015-06-26T09:28:21.623Z</updated>
  <id>http://jeffsui.github.io/</id>
  
  <author>
    <name><![CDATA[Jeff Sui]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[sonar-environment-setup]]></title>
    <link href="http://jeffsui.github.io/2015/06/26/sonar-environment-setup/"/>
    <id>http://jeffsui.github.io/2015/06/26/sonar-environment-setup/</id>
    <published>2015-06-26T09:26:55.000Z</published>
    <updated>2015-06-26T09:28:21.623Z</updated>
    <content type="html"><![CDATA[<h1 id="sonar环境搭建简明手册">sonar环境搭建简明手册</h1><h2 id="1-sonar简介">1.sonar简介</h2><p><strong>SONAR</strong>是一个开源代码质量检查平台,根据官方的说明</p>
<blockquote>
<p>sonar用于提高软件质量,提高你的开发团队效率,采用持续检查的方法……<br>支持c/c++,java,php,ruby,javascript,python,object c…等众多语言</p>
</blockquote>
<h2 id="2-安装包">2.安装包</h2><p>获取安装包:<code>sonarqube-4.3.3.zip</code>和<code>sonar-runner-dist-2.4.zip</code></p>
<h2 id="3-环境要求">3.环境要求</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdk1.6+</span><br></pre></td></tr></table></figure>
<p>运行时内存最少512M,分析内存2g以上(建议)。吃内存厉害！</p>
<h2 id="4-安装步骤">4.安装步骤</h2><ul>
<li><p>jdk环境1.6+</p>
</li>
<li><p>解压sonar安装包</p>
</li>
</ul>
<p><strong>注意路径中不能含有中文</strong></p>
<p>执行<br><code>{sonar_home}/bin/windows-x86-64/StartSonar.bat</code></p>
<p>如果发现启动成功字样</p>
<p>访问下面的地址:<code>http://localhost:9000</code></p>
<h2 id="5-修改配置">5.修改配置</h2><p>首先,sonar默认的数据库是derby,在生产环境我们肯定要选择自己的数据库。还好sonar支持的数据库很多,这里我们选择mysql数据库。</p>
<ul>
<li>创建数据库</li>
<li><p>创建用户并赋予权限<br>启动mysql服务,命令行登陆,执行下面的脚本:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> sonar <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span></span><br><span class="line"> </span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'sonar'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> sonar.* <span class="keyword">TO</span> <span class="string">'sonar'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'sonar'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改下面的文件</p>
</li>
</ul>
<p>`{sonar_home}/conf/sonar.properties</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Permissions to <span class="operator"><span class="keyword">create</span> <span class="keyword">tables</span>, indices <span class="keyword">and</span> <span class="keyword">triggers</span> must be granted <span class="keyword">to</span> JDBC <span class="keyword">user</span>.</span><br><span class="line"># The <span class="keyword">schema</span> must be created <span class="keyword">first</span>.</span><br><span class="line">sonar.jdbc.username=sonar</span><br><span class="line">sonar.jdbc.<span class="keyword">password</span>=sonar</span><br><span class="line"></span><br><span class="line">#<span class="comment">----- MySQL 5.x</span></span><br><span class="line"># Comment the embedded <span class="keyword">database</span> <span class="keyword">and</span> uncomment the following line <span class="keyword">to</span> <span class="keyword">use</span> MySQL</span><br><span class="line">sonar.jdbc.url=jdbc:mysql://localhost:<span class="number">3306</span>/sonar?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=<span class="literal">true</span></span><br><span class="line">#<span class="comment">--------------------------------------------------------------------------------------------------</span></span><br><span class="line"># WEB <span class="keyword">SERVER</span></span><br><span class="line"></span><br><span class="line"># Binding IP address. <span class="keyword">For</span> servers <span class="keyword">with</span> more than one IP address, this property specifies which</span><br><span class="line"># address will be used <span class="keyword">for</span> listening <span class="keyword">on</span> the specified ports.</span><br><span class="line"># <span class="keyword">By</span> <span class="keyword">default</span>, ports will be used <span class="keyword">on</span> <span class="keyword">all</span> IP addresses associated <span class="keyword">with</span> the <span class="keyword">server</span>.</span><br><span class="line">sonar.web.host=localhost</span><br><span class="line"></span><br><span class="line"># Web context. <span class="keyword">When</span> <span class="keyword">set</span>, it must <span class="keyword">start</span> <span class="keyword">with</span> forward slash (<span class="keyword">for</span> example /sonarqube).</span><br><span class="line"># The <span class="keyword">default</span> <span class="keyword">value</span> <span class="keyword">is</span> root context (empty <span class="keyword">value</span>).</span><br><span class="line">sonar.web.context=/sonar</span><br><span class="line"></span><br><span class="line"># TCP port <span class="keyword">for</span> incoming HTTP connections. Disabled <span class="keyword">when</span> <span class="keyword">value</span> <span class="keyword">is</span> -<span class="number">1.</span></span><br><span class="line">sonar.web.port=<span class="number">9000</span></span></span><br></pre></td></tr></table></figure>
<p>说明:<br>参数1:sonar数据库的用户名密码<br>参数2:sonar数据库的连接字符串<br>参数3:配置web访问的ip地址或域名<br>参数4:默认上下文路径 /<br>第五个参数是启用的端口</p>
<p>重启sonar,发现数据库中已经自动创建了表,证明mysql数据库配置成功。</p>
<h2 id="6-汉化">6.汉化</h2><p>插件目录<br><code>{sonar_home}</code>/extensions/plugins<br>将<code>sonar-l10n-zh-plugin-1.8.jar</code>放到上面的路径下,重启sonar服务<br>打开页面,汉化成功。</p>
<h2 id="7-安装配置sonar-runner">7.安装配置sonar-runner</h2><p>sonar-runner是一个提供对项目进行分析的命令行工具,安装和配置非常简单。</p>
<p>解压缩<code>sonar-runner-dist-2.4.zip</code></p>
<p>配置环境变量<br>SONAR_RUNNER_HOME=解压路径<br>Path：%SONAR_RUNNER_HOME%\bin;</p>
<p>同样不能含有中文</p>
<p>然后在你需要进行代码检查的项目根目录下建立<code>sonar-project.properties</code>,内容如下:</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Required metadata</span></span><br><span class="line">sonar.<span class="variable">projectKey=</span>my:project</span><br><span class="line">sonar.<span class="variable">projectName=</span>kfhx</span><br><span class="line">sonar.<span class="variable">projectVersion=</span><span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Paths to source directories.</span></span><br><span class="line"><span class="comment"># Paths are relative to the sonar-project.properties file. Replace "\" by "/" on Windows.</span></span><br><span class="line"><span class="comment"># Do not put the "sonar-project.properties" file in the same directory with the source code.</span></span><br><span class="line"><span class="comment"># (i.e. never set the "sonar.sources" property to ".")</span></span><br><span class="line">sonar.<span class="variable">sources=</span>f:/bz/kfht</span><br><span class="line"></span><br><span class="line"><span class="comment"># The value of the property must be the key of the language.</span></span><br><span class="line">sonar.<span class="variable">language=</span>c++</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encoding of the source code</span></span><br><span class="line">sonar.<span class="variable">sourceEncoding=</span>UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Additional parameters</span></span><br><span class="line">sonar.my.<span class="variable">property=</span>value</span><br></pre></td></tr></table></figure>
<p><code>sonar.projectKey=</code> 是一个标识,不能重复,否则结果会覆盖<br><code>sonar.sources=</code>需要检查的源码路径<br><code>sonar.language=</code><a href="http://www.sonarsource.com/products/plugins/languages/" target="_blank" rel="external">语言的种类</a><br><code>sonar.sourceEncoding=</code> 项目的编码方式</p>
<p>命令行下执行:<br><code>sonar-runner</code></p>
<p>然后就是漫长的等待,分析结束后访问:<code>http://localhost:9000</code><br>就可以看到相关的分析结果。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="sonar环境搭建简明手册">sonar环境搭建简明手册</h1><h2 id="1-sonar简介">1.sonar简介</h2><p><strong>SONAR</strong>是一个开源代码质量检查平台,根据官方的说明</p>
<blockquote>
<p]]>
    </summary>
    
      <category term="sonar" scheme="http://jeffsui.github.io/tags/sonar/"/>
    
      <category term="质量管理" scheme="http://jeffsui.github.io/categories/%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[how to run 2 mysql instance in one server]]></title>
    <link href="http://jeffsui.github.io/2015/05/20/how-to-run-2-mysql-instance-in-one-server/"/>
    <id>http://jeffsui.github.io/2015/05/20/how-to-run-2-mysql-instance-in-one-server/</id>
    <published>2015-05-20T07:50:30.000Z</published>
    <updated>2015-05-20T07:56:49.699Z</updated>
    <content type="html"><![CDATA[<h1 id="centos下如何同时运行两个mysql实例">centos下如何同时运行两个mysql实例</h1><h1 id="1-背景">1.背景</h1><pre><code>由于使用了<span class="tag">gitlab</span>一键包,所以本机已经启动了一个<span class="tag">mysql</span>实例,端口号为<span class="pseudo">:33061</span>
现在需要启动另一个<span class="tag">mysql</span>实例,启动报错
</code></pre><p>运行命令<code>service mysqld start</code></p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL错误Another MySQL daemon already running <span class="operator">with</span> <span class="operator">the</span> same unix <span class="built_in">socket</span>.</span><br></pre></td></tr></table></figure>
<h1 id="2-分析">2.分析</h1><p>因为已经有一个mysql实例启动,所用的SOCKET连接文件位于/tmp/mysql.sock,因此再启动mysqld会发现该文件已经被使用,才会报上面的错误。</p>
<h1 id="3-解决方案">3.解决方案</h1><h2 id="3-1_创建新实例的数据目录">3.1 创建新实例的数据目录</h2><p>此处我创建的实例路径为:<code>/var/lib/mysql2</code><br>并且给该目录分配mysql用户权限 <code>chown -R mysql /var/lib/mysql2</code></p>
<h2 id="3-2_创建数据库">3.2 创建数据库</h2><p>刚刚建立的目录下面，初始化数据库。</p>
<p><code>/usr/bin/mysql_install_db --user=mysql --datadir=/var/lib/mysql2</code></p>
<p>将mysql等系统数据库安装到实例准备运行的目录。</p>
<h2 id="3-3_配置文件">3.3 配置文件</h2><p>我自己的配置文件,路径在<code>/etc/my.cnf</code><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[mysqld_multi]</span><br><span class="line">mysqld = <span class="regexp">/usr/</span>mysql<span class="regexp">/bin/</span>mysqld_safe</span><br><span class="line">mysqladmin = <span class="regexp">/usr/</span>mysql<span class="regexp">/bin/</span>mysqladmin</span><br><span class="line">user = root</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=<span class="regexp">/var/</span>lib/mysql2</span><br><span class="line">socket=<span class="regexp">/var/</span>lib<span class="regexp">/mysql2/</span>mysql.sock</span><br><span class="line">user=mysql</span><br><span class="line">skip-grant-tables</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=<span class="regexp">/var/</span>log/mysqld2.log</span><br><span class="line">pid-file=<span class="regexp">/var/</span>run<span class="regexp">/mysqld/</span>mysqld.pid</span><br><span class="line">[client]</span><br><span class="line">socket = <span class="regexp">/var/</span>lib<span class="regexp">/mysql2/</span>mysql.sock</span><br></pre></td></tr></table></figure></p>
<h2 id="3-4_启动mysql服务">3.4 启动mysql服务</h2><p><code>service mysqld start</code><br>哇咔咔 成功了！</p>
<h2 id="3-5_查看当前mysql端口占用">3.5 查看当前mysql端口占用</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">netstat</span> -alntp |grep mysql</span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0.0.0:3306</span>                <span class="number">0.0.0.0</span>:*                   LISTEN      <span class="number">27900</span>/mysqld        </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">127.0.0.1:33061</span>             <span class="number">0.0.0.0</span>:*                   LISTEN      <span class="number">19135</span>/mysqld.bin</span><br></pre></td></tr></table></figure>
<h2 id="3-6_本地登陆mysql数据库">3.6 本地登陆mysql数据库</h2><p><code>mysql -uroot -p</code> 回车</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQ<span class="class">L monitor.  Commands end with ;</span><span class="instruction"> or </span>\g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.1.71 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright<span class="function"> (</span>c<span class="function">)</span> 2000, 2013, Oracle<span class="instruction"> and/or </span>its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation<span class="instruction"> and/or </span>its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;'<span class="instruction"> or </span>'\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>
<h1 id="4-_遇到的问题">4. 遇到的问题</h1><h2 id="4-1_本地无法登陆mysql">4.1 本地无法登陆mysql</h2><p>提示:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RROR <span class="number">2002</span> (HY000): Can’t connect <span class="keyword">to</span> <span class="keyword">local</span> MySQL server <span class="keyword">through</span> socket ‘/var/lib/mysql/mysql.sock’ (<span class="number">2</span>)</span><br></pre></td></tr></table></figure></p>
<p>检查配置文件<code>my.cnf</code>，最后加入<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">socket = <span class="regexp">/var/lib</span><span class="regexp">/mysql2/mysql</span>.sock</span><br></pre></td></tr></table></figure></p>
<p>重启服务后,解决。</p>
<h1 id="5-_参考博文">5. 参考博文</h1><ul>
<li><p><a href="http://www.linuxidc.com/Linux/2012-09/71141.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2012-09/71141.htm</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/eoiioe/archive/2008/12/28/1363947.html" target="_blank" rel="external">http://www.cnblogs.com/eoiioe/archive/2008/12/28/1363947.html</a></p>
</li>
<li><a href="http://blog.csdn.net/swengineer/article/details/6239711" target="_blank" rel="external">http://blog.csdn.net/swengineer/article/details/6239711</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="centos下如何同时运行两个mysql实例">centos下如何同时运行两个mysql实例</h1><h1 id="1-背景">1.背景</h1><pre><code>由于使用了<span class="tag">gitlab</span>一键包,所以本机已经启]]>
    </summary>
    
      <category term="centos" scheme="http://jeffsui.github.io/tags/centos/"/>
    
      <category term="mysql" scheme="http://jeffsui.github.io/tags/mysql/"/>
    
      <category term="mysql" scheme="http://jeffsui.github.io/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs learning 01]]></title>
    <link href="http://jeffsui.github.io/2015/05/14/nodejs-learning-01/"/>
    <id>http://jeffsui.github.io/2015/05/14/nodejs-learning-01/</id>
    <published>2015-05-14T06:26:26.000Z</published>
    <updated>2015-05-18T07:42:38.336Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><ul>
<li><p>nodejs是什么？</p>
<p>  nodejs是让javascript在服务器端运行的平台</p>
</li>
<li>特点:</li>
</ul>
<ol>
<li><p>异步、非阻塞方式<br> 所有的函数都是异步的,这个将在下面的学习中体会到</p>
</li>
<li><p>事件回调机制</p>
</li>
</ol>
<ol>
<li>单线程</li>
</ol>
<h1 id="CommonJS">CommonJS</h1><p>nodejs是参照<code>CommonJS</code>规范实现的,所以不得不探讨CommonJS规范。<br>简单说,<code>CommonJS</code>提供一个全局性方法<code>require(&#39;module_name&#39;)</code>，用于加载模块。</p>
<h1 id="安装与配置">安装与配置</h1><h2 id="windows篇">windows篇</h2><p>这里不得不提到几个基本概念,请移步至这里扫盲。</p>
<p>nvm是一个linux下的管理nodejs版本的工具,<br>nvmw是windows上的移植版本。如果你只是在<code>windows</code>上研究<code>nodejs</code>,那么请用<code>nvmw</code>管理你的node版本。</p>
<h3 id="获取nvmw">获取nvmw</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ d:</span><br><span class="line">$ cd git</span><br><span class="line">$ git clone https:<span class="comment">//github.com/cnpm/nvmw.git</span></span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">###设置环境变量</span></span><br><span class="line"></span><br><span class="line">`<span class="keyword">set</span> <span class="string">"PATH=d:\git\nvmw;%PATH%"</span>`</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="preprocessor">###重新打开终端,输入`nvmw`</span></span><br></pre></td></tr></table></figure>
<p>Node Version Manager for Windows</p>
<p>Usage:<br>  nvmw help                          Show this message<br>  nvmw install [version] [arch]      Download and install a [version]<br>                                       for [arch] architecture (optional)<br>  nvmw uninstall [version]           Uninstall a [version]<br>  nvmw use [version]                 Modify PATH to use [version]<br>  nvmw ls                            List installed versions</p>
<p>Example:<br>  nvmw install v0.10.21        Install a specific version number of node.js<br>  nvmw use v0.10.21            Use the specific version<br>  nvmw install iojs            Install the latest version of io.js<br>  nvmw install iojs-v1.0.2     Install a specific version number of io.js<br>  nvmw use iojs-v1.0.2         Use the specific version io.js</p>
<p>  nvmw install v0.10.35 x86    Install a 32-bit version</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###通过 <span class="escape">`n</span>vmw<span class="escape">` </span>安装任意版本的 <span class="escape">`n</span>ode<span class="escape">`</span><br><span class="line"></span></span><br><span class="line"><span class="escape">`n</span>vmw install v0.<span class="number">12.2</span> node<span class="escape">`</span><br><span class="line"></span></span><br><span class="line"></span><br><span class="line">#一个httpserver例子</span><br><span class="line"></span><br><span class="line">新建一个myServer.js,代码如下</span><br></pre></td></tr></table></figure>
<p>var http = require(“http”);<br>  http.createServer(function(request, response){<br>  response.writeHead(200,{“Content-Type”:”text/plain”});<br>  response.write(“Hello World”);<br>  response.end();<br>}).listen(8888);</p>
<p>```</p>
<p>命令行执行<code>node myServer.js</code></p>
<p>访问 <a href="http://localhost:8888/" target="_blank" rel="external">http://localhost:8888/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><ul>
<li><p>nodejs是什么？</p>
<p>  nodejs是让javascript在服务器端运行的平台</p>
</li>
<li>特点:</li>
</ul>
<ol>
<li><p>异步、非阻塞方式<br> 所有的函数都]]>
    </summary>
    
      <category term="javascript" scheme="http://jeffsui.github.io/tags/javascript/"/>
    
      <category term="nodejs" scheme="http://jeffsui.github.io/tags/nodejs/"/>
    
      <category term="读书笔记" scheme="http://jeffsui.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript" scheme="http://jeffsui.github.io/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript oop 15 min programming]]></title>
    <link href="http://jeffsui.github.io/2015/04/23/javascript-oop-15-min-programming/"/>
    <id>http://jeffsui.github.io/2015/04/23/javascript-oop-15-min-programming/</id>
    <published>2015-04-23T05:13:30.000Z</published>
    <updated>2015-04-23T06:28:31.916Z</updated>
    <content type="html"><![CDATA[<h1 id="javascript的面向对象15分钟教程">javascript的面向对象15分钟教程</h1><h2 id="第一种面向对象的写法">第一种面向对象的写法</h2><h2 id="创建空对象">创建空对象</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">var</span> bill</span> =&#123;&#125;;<span class="comment">//创建一个空对象</span></span><br></pre></td></tr></table></figure>
<h2 id="给对象添加属性和方法">给对象添加属性和方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bill.name = <span class="string">"Bill Goat"</span>;</span><br><span class="line">bill.work = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"programming...."</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="一步完成上面的两件事">一步完成上面的两件事</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> bill =&#123;</span><br><span class="line">    name : <span class="string">"Bill Goat"</span>;</span><br><span class="line">    work : <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"programming...."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="访问对象和属性">访问对象和属性</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">console.<span class="command">log</span>(bill.<span class="property">name</span>);</span><br><span class="line">bill.work();</span><br></pre></td></tr></table></figure>
<h2 id="方法重写">方法重写</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bill.name = <span class="string">"Bill Goat"</span>;</span><br><span class="line">bill.work =<span class="function"><span class="keyword">function</span><span class="params">(who)</span></span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"programming for "</span>+who);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="通过this关键字访问内部属性">通过this关键字访问内部属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bill.say = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"bill's name  is"</span>+<span class="keyword">this</span>.name);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="对象引用">对象引用</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var silly = bill;</span><br><span class="line">console.<span class="command">log</span>(silly.<span class="property">name</span>);</span><br><span class="line">sally.<span class="property">name</span> = <span class="string">"Silly"</span>;</span><br><span class="line">console.<span class="command">log</span>(silly.<span class="property">name</span>);</span><br><span class="line">console.<span class="command">log</span>(bill.<span class="property">name</span>);</span><br></pre></td></tr></table></figure>
<h2 id="另一个方式引用">另一个方式引用</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bill.<span class="property">name</span> = <span class="string">"Bill Goat"</span>;</span><br><span class="line">bill.<span class="command">say</span>();</span><br><span class="line"></span><br><span class="line">var sayName = bill.<span class="command">say</span>();</span><br><span class="line">sayName;</span><br><span class="line">sayName();</span><br></pre></td></tr></table></figure>
<h2 id="有意思的地方_：全局属性">有意思的地方 ：全局属性</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var <span class="property">name</span> = <span class="string">"Global"</span>;</span><br><span class="line">bill.<span class="command">say</span>();</span><br></pre></td></tr></table></figure>
<p>发现此时输出的是<br><code>bill&#39;s name is Global</code></p>
<h2 id="另一种面向对象的写法">另一种面向对象的写法</h2><h2 id="定义对象及属性">定义对象及属性</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Game</span><span class="params">()</span></span>&#123;&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="创建对象">创建对象</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> DF = <span class="keyword">new</span> Game();</span><br></pre></td></tr></table></figure>
<h2 id="对象属性">对象属性</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DF.<span class="variable">title =</span> <span class="string">"星际争霸2"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="构造方法">构造方法</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Game</span> <span class="params">(title)</span></span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.title = <span class="keyword">typeof</span> title !== <span class="string">'undifined'</span> ? title :<span class="string">""</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d3 = <span class="keyword">new</span> Game(<span class="string">"d3"</span>);</span><br><span class="line">d3.title;</span><br><span class="line">d3.title =<span class="string">"starcraft2"</span>;</span><br></pre></td></tr></table></figure>
<p><code>this.title = typeof title !== &#39;undifined&#39; ? title :&quot;&quot;;</code>相当于</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> title !== <span class="string">"undifined"</span>）&#123;</span><br><span class="line">	<span class="keyword">this</span>.title = title;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">this</span>.title = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建一个方法来访问这个属性">创建一个方法来访问这个属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">d3.loveTitle = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">"I love "</span>+<span class="keyword">this</span>.title);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="更好的写法">更好的写法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Game.prototype.heartIt = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">"I love "</span>+<span class="keyword">this</span>.title);</span><br><span class="line">&#125;</span><br><span class="line">d3.heartIt();</span><br></pre></td></tr></table></figure>
<p>下次详解javascript的原生对象模型</p>
<p>to be continued~~~~</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="javascript的面向对象15分钟教程">javascript的面向对象15分钟教程</h1><h2 id="第一种面向对象的写法">第一种面向对象的写法</h2><h2 id="创建空对象">创建空对象</h2><figure class="highligh]]>
    </summary>
    
      <category term="javascript" scheme="http://jeffsui.github.io/tags/javascript/"/>
    
      <category term="oop" scheme="http://jeffsui.github.io/tags/oop/"/>
    
      <category term="javascript" scheme="http://jeffsui.github.io/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[talk about software engineering]]></title>
    <link href="http://jeffsui.github.io/2015/04/22/talk-about-software-engineering/"/>
    <id>http://jeffsui.github.io/2015/04/22/talk-about-software-engineering/</id>
    <published>2015-04-22T01:12:54.000Z</published>
    <updated>2015-04-22T01:51:10.284Z</updated>
    <content type="html"><![CDATA[<h1 id="关于软件工程的讨论—质量篇">关于软件工程的讨论—质量篇</h1><blockquote>
<p>那为什么软件系统的质量不容易高呢？我觉得主要原因是流程不完善。那为什么不完善？需求容易变。为什么容易变？是因为不论程序员自己，还是需求方，其实潜意识都认为自己做的东西是变更成本较低的。</p>
<p>试想一下，为什么没人在盖高楼盖一半变更需求？为什么没人修大桥修一半变更需求？甚至做衣服做一半的时候变更需求，理发到一半变更需求，都会被人认为是不讲理。但是在软件领域，好像这倒成了普遍现象。</p>
<p>因为整个软件系统的实现，都是虚拟的，看不见摸不着，并不消耗什么物料，所以从这个角度想，变起来当然是容易的。但软件系统的架构，其实也跟实体的没本质区别，变更时候要考虑很多关联因素，并不是就那么孤立的看一小块地方，当然，也会有一些不影响全局的变更。打个比方说，如果你在盖房子盖到一半，那变更外墙颜色肯定是要比变更窗户大小容易的。要是想变得太多，估计只好拆了重来。</p>
</blockquote>
<p>下面的讨论更加精彩:</p>
<p>A:其实不是流程问题，老板和甲方问题</p>
<p>A:甲方尤其关键 </p>
<p>A:尼玛，要8层楼房，付2层费用</p>
<p>……</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="关于软件工程的讨论—质量篇">关于软件工程的讨论—质量篇</h1><blockquote>
<p>那为什么软件系统的质量不容易高呢？我觉得主要原因是流程不完善。那为什么不完善？需求容易变。为什么容易变？是因为不论程序员自己，还是需求方，其实潜意识都认为自己做的东西]]>
    </summary>
    
      <category term="软件工程" scheme="http://jeffsui.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="软件工程" scheme="http://jeffsui.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript asynchronous programming learning :event]]></title>
    <link href="http://jeffsui.github.io/2015/04/20/javascript-asynchronous-programming-learning-event/"/>
    <id>http://jeffsui.github.io/2015/04/20/javascript-asynchronous-programming-learning-event/</id>
    <published>2015-04-20T13:05:16.000Z</published>
    <updated>2015-04-22T01:50:20.824Z</updated>
    <content type="html"><![CDATA[<h1 id="javascript异步编程读书笔记之事件机制">javascript异步编程读书笔记之事件机制</h1><h2 id="事件的调度">事件的调度</h2><ul>
<li>异步执行</li>
</ul>
<p><code>setTimeout</code>函数的解释:给定一个回调及n毫秒的延迟,setTimeout会在n毫秒后运行该回调。</p>
<p>代码清单1:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">	setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span><br><span class="line">		<span class="built_in">console</span>.log(i); &#125;, </span><br><span class="line">	<span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>输出结果:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
<ul>
<li><p>线程阻塞<br>代码清单2:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> end = <span class="keyword">new</span> <span class="built_in">Date</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Time elapsed:'</span>, end - start, <span class="string">'ms'</span>);</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">new</span> <span class="built_in">Date</span> - start &lt; <span class="number">1000</span>) &#123;&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>队列</p>
</li>
</ul>
<p>javascript使用队列的方式来循环处理请求,这种机制被称为<strong>事件循环</strong>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="javascript异步编程读书笔记之事件机制">javascript异步编程读书笔记之事件机制</h1><h2 id="事件的调度">事件的调度</h2><ul>
<li>异步执行</li>
</ul>
<p><code>setTimeout</code>函数的]]>
    </summary>
    
      <category term="javascript" scheme="http://jeffsui.github.io/tags/javascript/"/>
    
      <category term="异步" scheme="http://jeffsui.github.io/tags/%E5%BC%82%E6%AD%A5/"/>
    
      <category term="javascript" scheme="http://jeffsui.github.io/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[use-shorturl and two-dimensional-barcodes to beautify blog]]></title>
    <link href="http://jeffsui.github.io/2015/04/20/use-shorturl-and-two-dimensional-barcodes-to-beautify-blog/"/>
    <id>http://jeffsui.github.io/2015/04/20/use-shorturl-and-two-dimensional-barcodes-to-beautify-blog/</id>
    <published>2015-04-20T07:37:14.000Z</published>
    <updated>2015-04-22T01:51:42.339Z</updated>
    <content type="html"><![CDATA[<h1 id="如何使用短网址和二维码简化网站访问">如何使用短网址和二维码简化网站访问</h1><ol>
<li>短网址(shorturl)<br> web2.0时代的潮流,借助短网址您可以用简短的网址替代原来冗长的网址，让使用者可以更容易的分享链接。<br>这里我使用的是百度的短网址服务:<a href="http://dwz.cn/" title="百度短网址" target="_blank" rel="external">http://dwz.cn/</a><ol>
<li>访问<a href="http://dwz.cn/主页" target="_blank" rel="external">http://dwz.cn/主页</a><br><img src="http://7xindo.com1.z0.glb.clouddn.com/百度短网址.png" alt=""></li>
<li>输入你的博客地址<br>我输入<a href="http://jeffsui.github.io/pinghailinfeng_blog/" target="_blank" rel="external">http://jeffsui.github.io/pinghailinfeng_blog/</a></li>
<li>复制短网址<br><img src="http://7xindo.com1.z0.glb.clouddn.com/百度短网址生成.png" alt=""></li>
</ol>
</li>
<li>二维码(two-dimensional-barcodes)<br>微信时代,不知道二维码的基本都属于外星球人了。<br>这里我选择的是草料二维码:<br><a href="http://cli.im/" title="草料二维码" target="_blank" rel="external">http://cli.im/</a><ol>
<li>输入二维码地址<br><img src="http://7xindo.com1.z0.glb.clouddn.com/在线二维码输入地址.jpg" alt=""></li>
<li>进行一些基本设置<br>包括前景色、背景色、渐变色等等。</li>
<li>嵌入图片</li>
<li>选用你喜欢的模板</li>
<li>保存二维码</li>
</ol>
</li>
<li>在线存储<br>这里我选择国内知名的七牛云存储。<br> <img src="http://7xindo.com1.z0.glb.clouddn.com/云存储图片.jpg" alt=""><br>4.在博客中引用图片地址就可以了</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="如何使用短网址和二维码简化网站访问">如何使用短网址和二维码简化网站访问</h1><ol>
<li>短网址(shorturl)<br> web2.0时代的潮流,借助短网址您可以用简短的网址替代原来冗长的网址，让使用者可以更容易的分享链接。<br>这里我使用的是百度]]>
    </summary>
    
      <category term="二维码" scheme="http://jeffsui.github.io/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    
      <category term="博客" scheme="http://jeffsui.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="短网址" scheme="http://jeffsui.github.io/tags/%E7%9F%AD%E7%BD%91%E5%9D%80/"/>
    
      <category term="美化" scheme="http://jeffsui.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
      <category term="搭建博客" scheme="http://jeffsui.github.io/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[push-hexo-to-github]]></title>
    <link href="http://jeffsui.github.io/2015/04/17/push-hexo-to-github/"/>
    <id>http://jeffsui.github.io/2015/04/17/push-hexo-to-github/</id>
    <published>2015-04-17T08:35:31.000Z</published>
    <updated>2015-04-22T01:50:39.454Z</updated>
    <content type="html"><![CDATA[<h1 id="如何使用hexo在github上建立静态博客">如何使用hexo在github上建立静态博客</h1><h2 id="环境搭建">环境搭建</h2><ol>
<li><p>hexo环境搭建</p>
<p> 请参考 hexo.io <a href="http://hexo.io/" title="官方站点" target="_blank" rel="external">官方站点</a>,<br> <strong>强烈建议</strong>给<em>基本操作</em>下的内容快速浏览一遍,下面的操作是我一个一个命令敲出来的,遇到的坑也会记录下来,希望大家能少走弯路。</p>
</li>
<li><p>github上建立静态博客</p>
<ol>
<li>github账号申请（略）</li>
<li>建立一个github项目</li>
<li><code>git clone 项目地址</code> 到本地</li>
<li>项目初始化<br><code><pre><br>cd 项目名<br>echo # hexo 实例站点 &gt;&gt; README.md<br>git init<br>git add README.md<br>git commit -m “first blood”<br>git remote add origin 项目地址<br>git push -u origin master<br></pre></code></li>
<li><p>github免费站点建立规则,请仔细阅读这个规则<br><a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="external">https://help.github.com/articles/user-organization-and-project-pages/</a></p>
</li>
<li><p>默认github域名</p>
<p>默认github 分配了 一个name.github.io的域名,<br>还有一个name.github.io/project_name的二级域名,<br>请参照github的提示设置URL。</p>
</li>
</ol>
</li>
</ol>
<h2 id="华丽的分割线">华丽的分割线</h2><ol>
<li><p>站点配置流程</p>
<ol>
<li>建立站点文件夹,并站点初始化</li>
<li>安装hexo依赖</li>
<li>修改node_module/hexo-server/index.js,用于本地调试</li>
<li>安装hexo-git-deployer插件</li>
<li><p>修改全局配置文件_config.yml,配置<code>deploy</code><br><code><pre><br># Site 站点配置<br>title: 凭海临风的测试江湖<br>subtitle:<br>description: 凭海临风的博客<br>author: Jeff Sui<br>language: zh-CN<br>timezone<br></pre></code></p>
<p><code><pre><br># URL 站点链接<br>## If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child" target="_blank" rel="external">http://yoursite.com/child</a>‘ and root as ‘/child/‘<br>url: <a href="http://jeffsui.github.io" target="_blank" rel="external">http://jeffsui.github.io</a><br>root: /pinghailinfeng_blog/<br>permalink: :year/:month/:day/:title/<br>permalink_defaults:<br></pre></code></p>
<p><code><pre><br># Deployment<br>## Docs: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">http://hexo.io/docs/deployment.html</a><br>deploy:<br>type: git<br>repo: <a href="https://github.com/jeffsui/pinghailinfeng_blog.git" target="_blank" rel="external">https://github.com/jeffsui/pinghailinfeng_blog.git</a><br>branch : master<br>message :<br></pre></code></p>
<p><em>以上配置仅供参考</em></p>
</li>
</ol>
</li>
<li><p>创建文章</p>
<ul>
<li><p>执行<code>hexo new</code> 命令</p>
<p>例如:hexo new post my-first-blog</p>
<p><em>将会自动在source/_posts下创建一个my-first-blog.md的文件,使用的是scaffolds下的post.md模板</em></p>
</li>
<li><p>修改并保存my-first-blog.md文件</p>
</li>
<li><p>站点生成<code>hexo g</code></p>
</li>
<li><p>站点部署 <code>hexo d</code></p>
<p>如果没有报错,恭喜你已经成功推送到 项目的master分支。</p>
</li>
</ul>
</li>
<li><p>创建gh-pages分支并推送到远程<br> <code><pre><br> git fetch origin master<br> git checkout gh-pages<br> git merge master<br> git push origin gh-pages<br> </pre></code></p>
</li>
<li>访问<a href="http://jeffsui.github.io/pinghailinfeng_blog/" title="站点" target="_blank" rel="external">http://jeffsui.github.io/pinghailinfeng_blog/</a></li>
</ol>
<h2 id="遇到的问题">遇到的问题</h2><ol>
<li>github站点的规则不熟悉,url配置浪费我2个小时。项目建立的是二级域名,所以必须要按照我说的那样配置。</li>
<li>本地预览有可能不加载样式,重新删除<code>node_module</code>下所有,执行<code>npm install</code>,再<code>hexo g</code>,<code>hexo server -i 127.0.0.1 -s -o</code>即可。</li>
<li>hexo3.0版本的git插件必须要独立安装。</li>
<li>其他坑,自己填吧。</li>
</ol>
<h2 id="总结">总结</h2><p><em>大坑各种有,github特别多,还有伟大的墙,兄弟们,github好上,填坑需谨慎！</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="如何使用hexo在github上建立静态博客">如何使用hexo在github上建立静态博客</h1><h2 id="环境搭建">环境搭建</h2><ol>
<li><p>hexo环境搭建</p>
<p> 请参考 hexo.io <a href="http://h]]>
    </summary>
    
      <category term="hexo" scheme="http://jeffsui.github.io/tags/hexo/"/>
    
      <category term="搭建" scheme="http://jeffsui.github.io/tags/%E6%90%AD%E5%BB%BA/"/>
    
      <category term="笔记" scheme="http://jeffsui.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="hexo" scheme="http://jeffsui.github.io/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sublime run slow problem]]></title>
    <link href="http://jeffsui.github.io/2015/04/17/sublime-run-slow-problem/"/>
    <id>http://jeffsui.github.io/2015/04/17/sublime-run-slow-problem/</id>
    <published>2015-04-17T06:49:18.000Z</published>
    <updated>2015-04-22T01:50:57.304Z</updated>
    <content type="html"><![CDATA[<h1 id="解决sublime_Text2运行缓慢的方法">解决sublime Text2运行缓慢的方法</h1><p>今天打开<code>sublime</code>想写博客发现整个页面打开很慢,切换tab要等好几秒。<br>发现了一个帖子,说<code>GitGutter</code>这个插件在st2下会影响切换tab速度。</p>
<p>于是 <code>ctrl+shift+p</code>调出命令,remove package,选择<code>GitGutter</code>,回车。<br>重启sublime,世界都变得清静了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="解决sublime_Text2运行缓慢的方法">解决sublime Text2运行缓慢的方法</h1><p>今天打开<code>sublime</code>想写博客发现整个页面打开很慢,切换tab要等好几秒。<br>发现了一个帖子,说<code>GitGutter]]>
    </summary>
    
      <category term="GitGutter" scheme="http://jeffsui.github.io/tags/GitGutter/"/>
    
      <category term="sublime" scheme="http://jeffsui.github.io/tags/sublime/"/>
    
      <category term="工具篇" scheme="http://jeffsui.github.io/categories/%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[first-blog]]></title>
    <link href="http://jeffsui.github.io/2015/04/17/first-blog/"/>
    <id>http://jeffsui.github.io/2015/04/17/first-blog/</id>
    <published>2015-04-17T05:39:23.000Z</published>
    <updated>2015-04-22T01:49:48.516Z</updated>
    <content type="html"><![CDATA[<h1 id="第一个博客">第一个博客</h1><h2 id="记录使用hexo的各种填坑。">记录使用hexo的各种填坑。</h2>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="第一个博客">第一个博客</h1><h2 id="记录使用hexo的各种填坑。">记录使用hexo的各种填坑。</h2>]]>
    </summary>
    
      <category term="杂记" scheme="http://jeffsui.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
      <category term="搭建博客" scheme="http://jeffsui.github.io/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://jeffsui.github.io/2015/04/17/hello-world/"/>
    <id>http://jeffsui.github.io/2015/04/17/hello-world/</id>
    <published>2015-04-17T05:08:51.675Z</published>
    <updated>2015-04-17T05:08:51.675Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>